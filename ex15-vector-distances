#!/usr/bin/env python
# --------------------------------------------------------------------------------------------------------- Intermediate
# Calculate the Euclidean distance between two vectors 

import numpy as np

def dist(a, b):
    sum = 0
    for ai, bi in zip(a, b):
        sum = sum + (ai - bi)**2
    return np.sqrt(sum)

# --------------------------------------------------------------------------------------------------------- Advanced
import numpy as np

x_train = np.random.rand(10, 3)   # generate 10 random vectors of dimension 3
x_test = np.random.rand(3)        # generate one more random vector of the same dimension

def dist(a, b):
    sum = 0
    for ai, bi in zip(a, b):
        sum = sum + (ai - bi)**2
    return np.sqrt(sum)

def nearest(x_train, x_test):
    nearest = 0
    min_distance = np.Inf
    x = 0
    min_distance = dist(x_test, x_train[0])
    distances = []
    for i in x_train:
        distance = dist(i, x_test)
        distances.append(distance)
    nearest_index = min(range(len(distances)), key=distances.__getitem__)
    print(nearest_index)

nearest(x_train, x_test)
