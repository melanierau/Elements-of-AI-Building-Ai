#!/usr/bin/env python

# Spam
# 1. start with the odds 1:1, which means that the probability of spam is 0.5
# 2. calculate the so called likelihood ratio as r=P(words|spam) รท P(words|ham)
# 3. multiply the current odds by r
# 4. repeat steps 2 and 3 until all words have been processed

# --------------------------------------------------------------------------------------------------------- Intermediate
def flip(n):
    odds = 1.0         # start with 50% chance of the magic coin, which is the same as odds = 1:1
    for i in range(n):
        odds = 1.*(2.**(i+1))
        pass           # edit here to update the odds
    print(odds)

n = 3
flip(n)

# --------------------------------------------------------------------------------------------------------- Advanced
import numpy as np

p1 = [1/6, 1/6, 1/6, 1/6, 1/6, 1/6]   # normal
p2 = [0.1, 0.1, 0.1, 0.1, 0.1, 0.5]   # loaded

def roll(loaded):
    if loaded:
        print("rolling a loaded die")
        p = p2
    else:
        print("rolling a normal die")
        p = p1

    # roll the dice 10 times
    # add 1 to get dice rolls from 1 to 6 instead of 0 to 5
    sequence = np.random.choice(6, size=10, p=p) + 1 
    for roll in sequence:
        print("rolled %d" % roll)
    print(sequence) 
    return sequence

def bayes(sequence):
    odds = 1.0           # start with odds 1:1
    for roll in sequence:
        r = p2[roll-1] / p1[roll-1]
        odds = odds * r
    if odds > 1:
        return True
    else:
        return False

sequence = roll(True)
if bayes(sequence):
    print("I think loaded")
else:
    print("I think normal")
